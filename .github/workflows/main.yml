name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: iih
        run: |
          VERSION_NUMBER=$(cat VERSION)
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION_NUMBER.${GITHUB_RUN_NUMBER} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION_NUMBER.${GITHUB_RUN_NUMBER}

      # - name: Set up Helm
      #   uses: azure/setup-helm@v4

      # - name: Clone Helm chart repository
      #   env:
      #     HELM_CHART_REPO_URL: ${{ secrets.HELM_CHART_REPO_URL }}
      #   run: |
      #     git clone $HELM_CHART_REPO_URL

      # - name: Helm deploy
      #   uses: koslibpro/helm-eks-action@master
      #   env:
      #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: iih
      #     NAMESPACE: iih
      #   with:
      #     command: |
      #       VERSION_NUMBER=$(cat VERSION)
      #       helm upgrade --install express-webapp  ./helm/${GITHUB_REPOSITORY##*/} -f ./helm/${GITHUB_REPOSITORY##*/}/values.yaml --set image.repository=$ECR_REGISTRY/$ECR_REPOSITORY --namespace $NAMESPACE --set image.tag=$VERSION_NUMBER.${GITHUB_RUN_NUMBER}
